.journeyRoot {
  position: relative;
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  border-radius: 24px;
  overflow: hidden;
  color: #f9fafb;
}

.journeyBackdrop {
  position: absolute;
  inset: 0;
  z-index: 0;
  overflow: hidden;
}

.journeyBackdropImage {
  position: absolute;
  inset: 0;
  background-size: cover;
  background-position: center;
  filter: saturate(0.85);
}

.journeyMandala {
  position: absolute !important;
  inset: -15% !important;
  opacity: 0.55 !important;
  pointer-events: none !important;
  filter: drop-shadow(0 0 0 rgba(255, 255, 255, 0.22)) blur(1.5px) !important;
  mix-blend-mode: screen;
}

.journeyBackdropTint {
  position: absolute;
  inset: 0;
  background: rgba(10, 16, 29, 0.85);
  backdrop-filter: blur(22px);
  -webkit-backdrop-filter: blur(22px);
}

.journeyContent {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: column;
  gap: 20px;
  padding: 28px;
  height: 100%;
  box-sizing: border-box;
  min-height: 0;
}

.journeyContent[data-external-hud='true'] {
  flex-direction: column;
}

.panelColumn {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 20px;
  min-height: 0;
}

@media (min-width: 960px) {
  .journeyContent:not([data-external-hud='true']) {
    flex-direction: row;
    align-items: stretch;
    gap: 28px;
  }
}

.panelRoot {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 24px;
  background: rgba(17, 24, 39, 0.78);
  color: inherit;
  border-radius: 24px;
  padding: 28px;
  box-shadow: 0 24px 60px rgba(0, 0, 0, 0.45);
  backdrop-filter: blur(18px);
  min-height: 0;
}

.stepWrapper {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 24px;
  min-height: 0;
  padding-bottom: 16px;
  overflow-y: auto;
  padding-right: 8px;
}

.stageArea {
  flex: 1;
  position: relative;
  display: flex;
  min-height: 0;
  overflow: hidden;
}

.stepMotion {
  flex: 1;
  display: flex;
  min-height: 0;
  overflow: hidden;
}

.stepMotion > * {
  flex: 1;
  display: flex;
  min-height: 0;
}

.stepHeader {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.stepHeaderRow {
  display: grid;
  grid-template-columns: minmax(0, 1fr) auto minmax(0, 1fr);
  align-items: center;
  gap: 12px 16px;
}

@media (max-width: 720px) {
  .stepHeaderRow {
    grid-template-columns: minmax(0, 1fr);
    justify-items: center;
  }

  .stepProgress {
    justify-self: stretch;
  }
}

.stepBadge {
  align-self: stretch;
  font-size: 12px;
  font-weight: 600;
  letter-spacing: 0.2em;
  text-transform: uppercase;
  padding: 6px 12px;
  border-radius: 999px;
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.85);
  justify-self: start;
  display: inline-flex;
  align-items: center;
}

.journeyTitle {
  margin: 0;
  font-size: 28px;
  font-weight: 700;
  letter-spacing: -0.01em;
  text-transform: none;
  color: #f9fafb;
  text-align: center;
}

.stepTitleWrap {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  gap: 4px;
  justify-self: center;
}

.stepSubtitle {
  font-size: 14px;
  font-weight: 500;
  color: rgba(249, 250, 251, 0.7);
}

.stepProgress {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 8px 14px;
  border-radius: 999px;
  background: rgba(255, 255, 255, 0.12);
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.08);
  justify-self: end;
}

@media (max-width: 720px) {
  .stepBadge {
    justify-self: center;
  }

  .stepProgress {
    justify-self: center;
  }
}

.stepProgressCount {
  font-size: 11px;
  letter-spacing: 0.2em;
  text-transform: uppercase;
  color: rgba(249, 250, 251, 0.85);
}

.stepProgressDots {
  display: flex;
  align-items: center;
  gap: 6px;
}

.stepDot {
  width: 10px;
  height: 10px;
  border-radius: 999px;
  background: rgba(255, 255, 255, 0.28);
  opacity: 0.6;
  transition: opacity 0.2s ease, transform 0.2s ease;
}

.stepDotCompleted {
  opacity: 0.85;
  background: rgba(255, 255, 255, 0.9);
}

.stepDotCurrent {
  opacity: 1;
  background: #f97316;
  transform: scale(1.2);
}

.methodGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  gap: 16px;
  overflow: auto;
  padding: 4px;
  flex: 1;
}

.methodCard {
  position: relative;
  border: 1px solid rgba(255, 255, 255, 0.08);
  border-radius: 18px;
  background: rgba(17, 24, 39, 0.72);
  color: inherit;
  text-align: left;
  padding: 18px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  transition: border-color 0.2s ease, background-color 0.2s ease, transform 0.2s ease;
}

.methodCard[data-selected='true'] {
  border-color: rgba(252, 211, 77, 0.8);
  background: rgba(120, 53, 15, 0.55);
  transform: translateY(-2px);
}

.methodCard:focus-visible,
.methodCard:hover {
  border-color: rgba(252, 211, 77, 0.6);
}

.methodCardContent {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.methodCardHeader {
  display: flex;
  gap: 12px;
}

.methodIcon {
  width: 48px;
  height: 48px;
  border-radius: 14px;
  background: rgba(255, 255, 255, 0.12);
  padding: 10px;
  filter: brightness(0) invert(1);
  object-fit: contain;
}

.methodLabel {
  font-weight: 600;
  font-size: 18px;
}

.methodOneLiner,
.methodDescription {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
  color: rgba(249, 250, 251, 0.75);
}

.hud {
  display: flex;
  flex-direction: column;
  gap: 10px;
  padding: 16px 18px;
  border-radius: 20px;
  background: rgba(15, 23, 42, 0.72);
  box-shadow: 0 18px 40px rgba(0, 0, 0, 0.35);
  border: 1px solid rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(18px);
  order: 0;
  max-height: 100%;
  overflow-y: auto;
  width: min(240px, 100%);
}

.hudItem {
  display: flex;
  align-items: flex-start;
  gap: 12px;
  padding: 14px 16px;
  border-radius: 16px;
  background: rgba(17, 24, 39, 0.72);
  border: 1px solid rgba(255, 255, 255, 0.08);
}

.hud[data-variant='external'] {
  order: initial;
  width: 100%;
}

.hudItem[data-state='required'] {
  border: 1px solid rgba(248, 113, 113, 0.65);
}

.hudItem[data-state='optional'] {
  border: 1px solid rgba(74, 222, 128, 0.45);
}

.hudItem[data-state='not_needed'] {
  border: 1px solid rgba(251, 191, 36, 0.55);
}

.hudIconWrap {
  width: 44px;
  height: 44px;
  border-radius: 14px;
  background: rgba(255, 255, 255, 0.08);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.hudIcon {
  width: 24px;
  height: 24px;
  color: #ffffff;
  filter: brightness(0) invert(1);
}

.hudMethodIcon {
  width: 36px;
  height: 36px;
  object-fit: contain;
  filter: brightness(0) invert(1) drop-shadow(0 2px 6px rgba(0, 0, 0, 0.4));
}

.hudText {
  display: flex;
  flex-direction: column;
  gap: 4px;
  min-width: 0;
}

.hudLabel {
  font-size: 11px;
  letter-spacing: 0.24em;
  text-transform: uppercase;
  color: rgba(249, 250, 251, 0.6);
}

.hudValue {
  font-size: 18px;
  font-weight: 600;
  line-height: 1.3;
  word-break: break-word;
  color: #ffffff;
}

.toast {
  position: absolute;
  left: 50%;
  bottom: 28px;
  transform: translateX(-50%);
  padding: 12px 20px;
  border-radius: 999px;
  background: rgba(15, 23, 42, 0.92);
  color: #f9fafb;
  font-weight: 600;
  box-shadow: 0 18px 36px rgba(0, 0, 0, 0.4);
  pointer-events: none;
  z-index: 5;
}

.stepFooter {
  margin-top: auto;
  display: flex;
  justify-content: space-between;
  gap: 16px;
  position: sticky;
  bottom: 0;
}

.secondaryButton,
.primaryButton {
  border-radius: 999px;
  font-weight: 600;
  font-size: 15px;
  padding: 12px 24px;
  border: none;
  cursor: pointer;
  transition: transform 0.15s ease, opacity 0.15s ease;
}

.secondaryButton {
  background: rgba(255, 255, 255, 0.12);
  color: rgba(249, 250, 251, 0.9);
}

.primaryButton {
  background: #f97316;
  color: #111827;
}

.secondaryButton:hover,
.secondaryButton:focus-visible {
  transform: translateY(-1px);
}

.primaryButton:hover,
.primaryButton:focus-visible {
  transform: translateY(-1px);
}

.primaryButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.volumeGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  gap: 14px;
}

.volumeTile {
  border-radius: 18px;
  padding: 16px;
  background: rgba(255, 255, 255, 0.08);
  border: 1px solid transparent;
  transition: border-color 0.2s ease, background-color 0.2s ease;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  gap: 10px;
}

.volumeButton {
  appearance: none;
  color: inherit;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  width: 100%;
}

.volumeButton:focus-visible {
  outline: 2px solid rgba(251, 191, 36, 0.7);
  outline-offset: 2px;
}

.volumeButton[data-selected='true'] {
  border-color: rgba(252, 211, 77, 0.8);
  background: rgba(120, 53, 15, 0.5);
}

.volumeButtonIcon {
  width: 42px;
  height: 42px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.volumeButtonIcon img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  filter: brightness(0) invert(1);
}

.volumeValue {
  font-size: 18px;
  font-weight: 700;
}

.volumeDescription {
  font-size: 13px;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  opacity: 0.7;
}

.volumeCustomCard {
  align-items: stretch;
  gap: 12px;
}

.volumeCustomTitle {
  text-transform: uppercase;
  font-size: 12px;
  letter-spacing: 0.3em;
  color: rgba(249, 250, 251, 0.7);
}

.volumeInputRow {
  display: flex;
  align-items: center;
  gap: 12px;
  align-self: flex-start;
  background: rgba(255, 255, 255, 0.06);
  padding: 12px 18px;
  border-radius: 16px;
}

.volumeCustomCard .volumeInputRow {
  align-self: stretch;
}

.hiddenLabel {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.volumeInput {
  background: transparent;
  border: none;
  color: inherit;
  font-size: 20px;
  font-weight: 600;
  width: 100px;
  text-align: right;
}

.volumeInput:focus {
  outline: none;
}

.volumeSuffix {
  font-weight: 500;
  opacity: 0.8;
}

.gearListWrapper {
  flex: 1;
  background: rgba(255, 255, 255, 0.05);
  border-radius: 18px;
  padding: 18px;
  overflow: auto;
}

.gearGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  gap: 14px;
  margin: 0;
  padding: 0;
  list-style: none;
}

.gearCard {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  gap: 10px;
}

.gearIcon {
  width: 44px;
  height: 44px;
  object-fit: contain;
  filter: brightness(0) invert(1);
}

.gearName {
  font-weight: 600;
}

.gearFallback {
  margin: 0;
  color: rgba(249, 250, 251, 0.7);
}

.instructionsPanel {
  flex: 1;
  background: rgba(17, 24, 39, 0.6);
  border-radius: 18px;
  padding: 24px;
  display: flex;
  flex-direction: column;
  gap: 20px;
  outline: none;
}

.instructionsHeader {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.instructionsHeader h3 {
  margin: 0;
  font-size: 24px;
}

.instructionsIntro {
  margin: 0;
  color: rgba(249, 250, 251, 0.75);
  line-height: 1.5;
}

.instructionsList {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 16px;
  counter-reset: instruction-step;
}

.instructionsListItem {
  counter-increment: instruction-step;
  background: rgba(255, 255, 255, 0.06);
  border-radius: 16px;
  padding: 16px 16px 16px 56px;
  position: relative;
  line-height: 1.6;
}

.instructionsListItem::before {
  content: counter(instruction-step);
  position: absolute;
  top: 50%;
  left: 18px;
  transform: translateY(-50%);
  width: 28px;
  height: 28px;
  border-radius: 999px;
  background: rgba(251, 191, 36, 0.2);
  color: rgba(251, 191, 36, 0.95);
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
}

.instructionsFallback {
  margin: 0;
  color: rgba(249, 250, 251, 0.75);
  background: rgba(255, 255, 255, 0.06);
  border-radius: 16px;
  padding: 20px;
  line-height: 1.6;
}

.filterNotice {
  padding: 16px;
  border-radius: 16px;
  background: rgba(255, 255, 255, 0.08);
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.filterNotice[data-state='required'] {
  border: 1px solid rgba(248, 113, 113, 0.7);
}

.filterNotice[data-state='optional'] {
  border: 1px solid rgba(74, 222, 128, 0.7);
}

.filterNotice[data-state='not_needed'] {
  border: 1px solid rgba(251, 191, 36, 0.7);
}

.waterLeafPanel {
  flex: 1;
  background: rgba(17, 24, 39, 0.6);
  border-radius: 18px;
  padding: 24px;
  display: flex;
  flex-direction: column;
  gap: 20px;
  outline: none;
}

.waterLeafAmounts {
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
}

.amountBlock {
  flex: 1;
  min-width: 180px;
  background: rgba(255, 255, 255, 0.08);
  border-radius: 16px;
  padding: 18px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.amountValueRow {
  display: flex;
  align-items: center;
  gap: 12px;
  flex-wrap: wrap;
}

.amountLabel {
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 0.2em;
  color: rgba(249, 250, 251, 0.6);
}

.amountValue {
  font-size: 32px;
  font-weight: 700;
}

.amountHints {
  display: flex;
  gap: 12px;
  color: rgba(249, 250, 251, 0.7);
}

.tempBadge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: rgba(251, 191, 36, 0.2);
  color: rgba(251, 191, 36, 0.95);
  padding: 6px 12px;
  border-radius: 999px;
  font-weight: 600;
}

.preheatNotice {
  padding: 12px 16px;
  background: rgba(251, 146, 60, 0.15);
  border-left: 3px solid rgba(251, 146, 60, 0.6);
  border-radius: 12px;
}

.ratioBox {
  background: rgba(255, 255, 255, 0.06);
  border-radius: 16px;
  padding: 16px;
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.ingredientsBox {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 16px;
  padding: 20px;
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.ingredientsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 12px;
}

.ingredientsHeader h4 {
  margin: 0;
}

.unitToggle {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  background: rgba(255, 255, 255, 0.08);
  padding: 4px;
  border-radius: 999px;
}

.unitToggleButton {
  border: none;
  background: transparent;
  color: rgba(249, 250, 251, 0.75);
  font-weight: 600;
  font-size: 13px;
  padding: 6px 12px;
  border-radius: 999px;
  cursor: pointer;
  transition: background-color 0.15s ease, color 0.15s ease;
}

.unitToggleButton[data-active='true'] {
  background: rgba(249, 115, 22, 0.35);
  color: #f9fafb;
}

.unitToggleButton:focus-visible {
  outline: 2px solid rgba(249, 250, 251, 0.8);
  outline-offset: 2px;
}

.ingredientsList {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.ingredientsRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 12px;
  flex-wrap: wrap;
}

.ingredientsLabel {
  font-size: 12px;
  letter-spacing: 0.2em;
  text-transform: uppercase;
  color: rgba(249, 250, 251, 0.6);
}

.ingredientsValue {
  font-weight: 600;
  font-size: 18px;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  color: #ffffff;
}

.ingredientsAlt {
  font-size: 14px;
  color: rgba(249, 250, 251, 0.65);
}

.ratioHint {
  margin: 0;
  color: rgba(249, 250, 251, 0.6);
  font-size: 14px;
}

.sliderRow {
  display: flex;
  align-items: center;
  gap: 16px;
}

.sliderLabel {
  font-weight: 600;
  font-size: 14px;
}

.slider {
  flex: 1;
}

.noteBox {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 16px;
  padding: 16px;
}

.noteBox h4 {
  margin-top: 0;
  margin-bottom: 8px;
}

.noteBox ul {
  margin: 0;
  padding-left: 20px;
  color: rgba(249, 250, 251, 0.75);
}

@media (min-width: 768px) {
  .journeyContent[data-external-hud='true'] {
    flex-direction: column;
  }

  .hud[data-variant='external'] {
    width: 100%;
    align-self: auto;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 16px;
  }

  .hud[data-variant='external'] .hudItem {
    flex: 1 1 0%;
  }
}

@media (min-width: 960px) {
  .journeyContent:not([data-external-hud='true']) .hud {
    width: 15%;
    max-width: 15%;
    align-self: flex-start;
  }
}

.steepPanel {
  flex: 1;
  background: rgba(17, 24, 39, 0.6);
  border-radius: 18px;
  padding: 24px;
  display: flex;
  flex-direction: column;
  gap: 18px;
}

.steepRange {
  font-weight: 600;
}

.steepHint {
  color: rgba(250, 204, 21, 0.8);
}

.timerBox {
  display: flex;
  flex-direction: column;
  gap: 16px;
  background: rgba(255, 255, 255, 0.06);
  border-radius: 16px;
  padding: 20px;
}

.timerDisplay {
  font-size: 48px;
  font-weight: 700;
  text-align: center;
}

.timerControls {
  display: flex;
  flex-wrap: wrap;
  gap: 12px;
  justify-content: center;
}

.noTimerBox {
  display: flex;
  flex-direction: column;
  gap: 12px;
  background: rgba(255, 255, 255, 0.06);
  border-radius: 16px;
  padding: 20px;
}

.cautionBox {
  background: rgba(248, 113, 113, 0.15);
  border: 1px solid rgba(248, 113, 113, 0.4);
  border-radius: 16px;
  padding: 16px;
}

.cautionBox h4 {
  margin-top: 0;
  margin-bottom: 8px;
}

.cautionBox ul {
  margin: 0;
  padding-left: 20px;
}

.finishPanel {
  flex: 1;
  background: rgba(17, 24, 39, 0.6);
  border-radius: 18px;
  padding: 24px;
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.finishIntroBlock {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.finishHeading {
  margin: 0;
  font-size: 26px;
  font-weight: 700;
  color: #f9fafb;
}

.finishIntro {
  margin: 0;
  color: rgba(249, 250, 251, 0.75);
  font-size: 16px;
  line-height: 1.6;
}

.finishMessage {
  margin: 0;
  font-size: 18px;
  line-height: 1.6;
}

.finishFooter {
  display: flex;
  justify-content: space-between;
  gap: 16px;
  margin-top: auto;
}

@media (max-width: 768px) {
  .panelBody {
    padding: 20px;
  }

  .methodGrid {
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
  }

  .stepFooter,
  .finishFooter {
    flex-direction: column-reverse;
    align-items: stretch;
  }

  .secondaryButton,
  .primaryButton {
    width: 100%;
    text-align: center;
  }

  .stepWrapper {
    padding-right: 0;
  }
}

/* === FIXED RIGHT-SIDE HUD === */
@media (min-width: 1024px) {
  /* fő tartalom kapjon helyet a HUD-nak */
  .journeyContent:not([data-external-hud='true']) {
    padding-right: 360px; /* HUD szélessége + légrés */
  }

  /* maga a HUD-panel fixen a jobb oldalon */
  .journeyContent:not([data-external-hud='true']) .hud:not([data-variant='external']) {
    position: fixed;
    top: 28px;
    right: 28px;
    width: 240px;
    max-height: calc(100% - 56px);
    overflow-y: auto;
    z-index: 20;

    /* oszlop-elrendezés */
    display: flex;
    flex-direction: column;
    gap: 16px;

    order: initial; /* ne a flex-rend számítson */
    align-self: initial;
  }

  /* az egyes HUD-dobozok */
  .hudItem {
    display: flex;
    align-items: flex-start;
    gap: 12px;
    padding: 14px 16px;
    border-radius: 16px;
    background: rgba(17, 24, 39, 0.72);
    border: 1px solid rgba(255, 255, 255, 0.08);
  }
}